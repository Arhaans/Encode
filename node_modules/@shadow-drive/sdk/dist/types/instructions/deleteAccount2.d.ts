/// <reference types="bn.js" />
import { web3, BN } from "@coral-xyz/anchor";
export interface DeleteAccount2Args {
    storageUsed: BN;
}
export interface DeleteAccount2Accounts {
    /** This is the `StorageConfig` accounts that holds all of the admin, uploader keys. */
    storageConfig: web3.PublicKey;
    /** This account is a PDA that holds a user's info (not specific to one storage account). */
    userInfo: web3.PublicKey;
    /** Parent storage account. */
    storageAccount: web3.PublicKey;
    /** This token account serves as the account which holds user's stake for file storage. */
    stakeAccount: web3.PublicKey;
    /**
     * File owner, user
     * Also, our uploader keys are signing this transaction so presuamably we would only provide a good key.
     * We also may not need this account at all.
     */
    owner: web3.PublicKey;
    /** This is the user's token account, presumably with which they staked */
    shdwPayer: web3.PublicKey;
    /** Admin/uploader */
    uploader: web3.PublicKey;
    /** This token accountis the SHDW operator emissions wallet */
    emissionsWallet: web3.PublicKey;
    /** Token mint account */
    tokenMint: web3.PublicKey;
    /** System Program */
    systemProgram: web3.PublicKey;
    /** Token Program */
    tokenProgram: web3.PublicKey;
}
export declare const layout: any;
/**
 * Context: This is for admin use.
 * Function: This deletes the corresponding `StorageAccount` account and return's user funds.
 * Fails if file is marked as immutable, or if time elapsed since request is less than the grace period.
 */
export declare function deleteAccount2(args: DeleteAccount2Args, accounts: DeleteAccount2Accounts): web3.TransactionInstruction;
//# sourceMappingURL=deleteAccount2.d.ts.map