import { web3 } from "@coral-xyz/anchor";
export interface ClaimStake2Accounts {
    /** This is the `StorageConfig` accounts that holds all of the admin, uploader keys. */
    storageConfig: web3.PublicKey;
    /** Parent storage account. Only used here for the key */
    storageAccount: web3.PublicKey;
    /** Account which stores time, epoch last unstaked. Close upon successful unstake. */
    unstakeInfo: web3.PublicKey;
    /** Account which stores SHDW when unstaking.  Close upon successful unstake. */
    unstakeAccount: web3.PublicKey;
    /**
     * File owner, user, fee-payer
     * Requires mutability since owner/user is fee payer.
     */
    owner: web3.PublicKey;
    /**
     * File owner, user, fee-payer
     * Requires mutability since owner/user is fee payer.
     */
    ownerAta: web3.PublicKey;
    /** Token mint account */
    tokenMint: web3.PublicKey;
    /** System Program */
    systemProgram: web3.PublicKey;
    /** Token Programn */
    tokenProgram: web3.PublicKey;
}
/**
 * Context: This is user facing.
 * Function: allows user to claim stake from unstake ticket.
 * Fails if user has not waited an appropriate amount of time.
 */
export declare function claimStake2(accounts: ClaimStake2Accounts): web3.TransactionInstruction;
//# sourceMappingURL=claimStake2.d.ts.map