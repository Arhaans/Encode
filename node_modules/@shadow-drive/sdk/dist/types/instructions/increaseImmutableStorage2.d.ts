/// <reference types="bn.js" />
import { web3, BN } from "@coral-xyz/anchor";
export interface IncreaseImmutableStorage2Args {
    additionalStorage: BN;
}
export interface IncreaseImmutableStorage2Accounts {
    /** This is the `StorageConfig` accounts that holds all of the admin, uploader keys. */
    storageConfig: web3.PublicKey;
    /** Parent storage account. */
    storageAccount: web3.PublicKey;
    /** Wallet that receives storage fees */
    emissionsWallet: web3.PublicKey;
    /**
     * File owner, user, fee-payer
     * Requires mutability since owner/user is fee payer.
     */
    owner: web3.PublicKey;
    /** This is the user's token account with which they are staking */
    ownerAta: web3.PublicKey;
    /** Uploader needs to sign off on increase storage */
    uploader: web3.PublicKey;
    /** Token mint account */
    tokenMint: web3.PublicKey;
    /** System Program */
    systemProgram: web3.PublicKey;
    /** Token Program */
    tokenProgram: web3.PublicKey;
}
export declare const layout: any;
/**
 * Context: This is user facing.
 * Function: allows user to pay for more storage at current rate, after having marked an account as immutable
 */
export declare function increaseImmutableStorage2(args: IncreaseImmutableStorage2Args, accounts: IncreaseImmutableStorage2Accounts): web3.TransactionInstruction;
//# sourceMappingURL=increaseImmutableStorage2.d.ts.map