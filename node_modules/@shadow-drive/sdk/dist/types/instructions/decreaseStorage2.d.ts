/// <reference types="bn.js" />
import { web3, BN } from "@coral-xyz/anchor";
export interface DecreaseStorage2Args {
    removeStorage: BN;
    storageUsed: BN;
}
export interface DecreaseStorage2Accounts {
    /** This is the `StorageConfig` accounts that holds all of the admin, uploader keys. */
    storageConfig: web3.PublicKey;
    /** Parent storage account. */
    storageAccount: web3.PublicKey;
    /** Account which stores time, epoch last unstaked */
    unstakeInfo: web3.PublicKey;
    /** Account which stores SHDW when unstaking */
    unstakeAccount: web3.PublicKey;
    /**
     * File owner, user, fee-payer
     * Requires mutability since owner/user is fee payer.
     */
    owner: web3.PublicKey;
    /** User's ATA */
    ownerAta: web3.PublicKey;
    /** This token account serves as the account which holds user's stake for file storage. */
    stakeAccount: web3.PublicKey;
    /** Token mint account */
    tokenMint: web3.PublicKey;
    /** Uploader needs to sign off on decrease storage */
    uploader: web3.PublicKey;
    /** Token account holding operator emission funds */
    emissionsWallet: web3.PublicKey;
    /** System Program */
    systemProgram: web3.PublicKey;
    /** Token Program */
    tokenProgram: web3.PublicKey;
    /** Rent Program */
    rent: web3.PublicKey;
}
export declare const layout: any;
/**
 * Context: This is user facing.
 * Function: allows user to reduce storage, up to current available storage,
 * and begins an unstake ticket.
 */
export declare function decreaseStorage2(args: DecreaseStorage2Args, accounts: DecreaseStorage2Accounts): web3.TransactionInstruction;
//# sourceMappingURL=decreaseStorage2.d.ts.map