"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.layout = exports.fromJSON = exports.fromDecoded = exports.Initialize = exports.Decrement = exports.Increment = void 0;
const borsh = __importStar(require("@coral-xyz/borsh"));
class Increment {
    constructor() {
        this.discriminator = 0;
        this.kind = "Increment";
    }
    toJSON() {
        return {
            kind: "Increment",
        };
    }
    toEncodable() {
        return {
            Increment: {},
        };
    }
}
exports.Increment = Increment;
Increment.discriminator = 0;
Increment.kind = "Increment";
class Decrement {
    constructor() {
        this.discriminator = 1;
        this.kind = "Decrement";
    }
    toJSON() {
        return {
            kind: "Decrement",
        };
    }
    toEncodable() {
        return {
            Decrement: {},
        };
    }
}
exports.Decrement = Decrement;
Decrement.discriminator = 1;
Decrement.kind = "Decrement";
class Initialize {
    constructor() {
        this.discriminator = 2;
        this.kind = "Initialize";
    }
    toJSON() {
        return {
            kind: "Initialize",
        };
    }
    toEncodable() {
        return {
            Initialize: {},
        };
    }
}
exports.Initialize = Initialize;
Initialize.discriminator = 2;
Initialize.kind = "Initialize";
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function fromDecoded(obj) {
    if (typeof obj !== "object") {
        throw new Error("Invalid enum object");
    }
    if ("Increment" in obj) {
        return new Increment();
    }
    if ("Decrement" in obj) {
        return new Decrement();
    }
    if ("Initialize" in obj) {
        return new Initialize();
    }
    throw new Error("Invalid enum object");
}
exports.fromDecoded = fromDecoded;
function fromJSON(obj) {
    switch (obj.kind) {
        case "Increment": {
            return new Increment();
        }
        case "Decrement": {
            return new Decrement();
        }
        case "Initialize": {
            return new Initialize();
        }
    }
}
exports.fromJSON = fromJSON;
function layout(property) {
    const ret = borsh.rustEnum([
        borsh.struct([], "Increment"),
        borsh.struct([], "Decrement"),
        borsh.struct([], "Initialize"),
    ]);
    if (property !== undefined) {
        return ret.replicate(property);
    }
    return ret;
}
exports.layout = layout;
//# sourceMappingURL=Mode.js.map