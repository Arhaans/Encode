import * as types from "../types";
import * as borsh from "@coral-xyz/borsh";
export interface IncrementJSON {
    kind: "Increment";
}
export declare class Increment {
    static readonly discriminator = 0;
    static readonly kind = "Increment";
    readonly discriminator = 0;
    readonly kind = "Increment";
    toJSON(): IncrementJSON;
    toEncodable(): {
        Increment: {};
    };
}
export interface DecrementJSON {
    kind: "Decrement";
}
export declare class Decrement {
    static readonly discriminator = 1;
    static readonly kind = "Decrement";
    readonly discriminator = 1;
    readonly kind = "Decrement";
    toJSON(): DecrementJSON;
    toEncodable(): {
        Decrement: {};
    };
}
export interface InitializeJSON {
    kind: "Initialize";
}
export declare class Initialize {
    static readonly discriminator = 2;
    static readonly kind = "Initialize";
    readonly discriminator = 2;
    readonly kind = "Initialize";
    toJSON(): InitializeJSON;
    toEncodable(): {
        Initialize: {};
    };
}
export declare function fromDecoded(obj: any): types.ModeKind;
export declare function fromJSON(obj: types.ModeJSON): types.ModeKind;
export declare function layout(property?: string): borsh.EnumLayout<unknown>;
//# sourceMappingURL=Mode.d.ts.map