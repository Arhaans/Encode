import { web3 } from "@coral-xyz/anchor";
import { createStorageAccount, addStorage, claimStake, deleteFile, deleteStorageAccount, editFile, getStorageAcc, getStorageAccs, makeStorageImmutable, reduceStorage, cancelDeleteStorageAccount, uploadFile, uploadMultipleFiles, listObjects, migrate, topUp, refreshStake, getStorageAccInfo } from "./methods";
import { StorageAccount, StorageAccountV2, StorageConfig, UserInfo, UnstakeInfo } from "./types/accounts";
import { InitializeAccount2Args, InitializeAccount2Accounts, UpdateAccount2Args, UpdateAccount2Accounts, RequestDeleteAccount2Accounts, UnmarkDeleteAccount2Accounts, DeleteAccount2Args, DeleteAccount2Accounts, MakeAccountImmutable2Args, MakeAccountImmutable2Accounts, IncreaseStorage2Args, IncreaseStorage2Accounts, IncreaseImmutableStorage2Args, IncreaseImmutableStorage2Accounts, DecreaseStorage2Args, DecreaseStorage2Accounts, ClaimStake2Accounts, RefreshStake2Accounts, MigrateStep1Accounts, MigrateStep2Accounts } from "./types/instructions/index";
import { CustomError } from "./types/errors/custom";
import { CreateStorageResponse, ShadowBatchUploadResponse, ShadowDriveResponse, ShadowFile, ShadowUploadResponse, ShadowEditResponse, ListObjectsResponse, StorageAccountInfo } from "./types";
export declare class ShdwDrive {
    private connection;
    private wallet;
    private program;
    storageConfigPDA: web3.PublicKey;
    userInfo: web3.PublicKey;
    createStorageAccount: typeof createStorageAccount;
    addStorage: typeof addStorage;
    claimStake: typeof claimStake;
    deleteFile: typeof deleteFile;
    deleteStorageAccount: typeof deleteStorageAccount;
    editFile: typeof editFile;
    getStorageAccountInfo: typeof getStorageAccInfo;
    getStorageAccount: typeof getStorageAcc;
    getStorageAccounts: typeof getStorageAccs;
    listObjects: typeof listObjects;
    makeStorageImmutable: typeof makeStorageImmutable;
    reduceStorage: typeof reduceStorage;
    topUp: typeof topUp;
    refreshStake: typeof refreshStake;
    cancelDeleteStorageAccount: typeof cancelDeleteStorageAccount;
    uploadFile: typeof uploadFile;
    uploadMultipleFiles: typeof uploadMultipleFiles;
    migrate: typeof migrate;
    /**
     *
     * @param connection {web3.Connection} connection - initialized web3 connection object
     * @param wallet - Web3 wallet
     */
    constructor(connection: web3.Connection, wallet: any);
    init(): Promise<ShdwDrive>;
}
export { CreateStorageResponse, ShadowDriveResponse, ShadowUploadResponse, ShadowEditResponse, ShadowFile, ShadowBatchUploadResponse, ListObjectsResponse, StorageAccountInfo, StorageAccount, StorageAccountV2, StorageConfig, UserInfo, UnstakeInfo, InitializeAccount2Args, InitializeAccount2Accounts, UpdateAccount2Args, UpdateAccount2Accounts, RequestDeleteAccount2Accounts, UnmarkDeleteAccount2Accounts, DeleteAccount2Args, DeleteAccount2Accounts, MakeAccountImmutable2Args, MakeAccountImmutable2Accounts, IncreaseStorage2Args, IncreaseStorage2Accounts, IncreaseImmutableStorage2Args, IncreaseImmutableStorage2Accounts, DecreaseStorage2Args, DecreaseStorage2Accounts, ClaimStake2Accounts, RefreshStake2Accounts, MigrateStep1Accounts, MigrateStep2Accounts, CustomError, };
//# sourceMappingURL=index.d.ts.map